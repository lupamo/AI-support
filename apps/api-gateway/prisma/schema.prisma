// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//===================================
// ENUM FOR ROLES
//=====================================
enum Role {
  CUSTOMER
  AGENT
  ADMIN
}

//===================================
// USER MODEL
//=====================================

model User {
  id  String  @id @default(cuid())
  email String  @unique
  password  String?
  firstName String?
  lastName  String?

  // Role assignment using the enum
  role  Role  @default(CUSTOMER)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relation: A user can now own multiple tickets
  tickets Ticket[]
}

//===================================
// Ticket MODEL
//====================================

model Ticket {
  id  String  @id @default(cuid())
  subject String
  body  String

  // Status will be updated by the CS Service (New, Assigmed, Resolved, Closed)
  status  String  @default("New")

  // Category will be populated by the AI/ML Service
  category        String?
  sentimentScore  Float?

  //Relation: Links the ticket back to its creator (user)
  owner  User   @relation(fields: [ownerId], references: [id])
  ownerId   String

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}